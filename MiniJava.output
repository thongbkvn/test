Terminals unused in grammar

   TYPE_ERROR


State 51 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ClassDeclp

    2 ClassDeclp: ClassDecl
    3           | ClassDeclp ClassDecl

    4 ClassDecl: KW_CLASS IDENT ExtendsFrom '{' VarDecls MethodDecls '}'

    5 ExtendsFrom: %empty
    6            | KW_EXTENDS IDENT

    7 VarDecls: VarDecls VarDecl
    8         | %empty

    9 VarDecl: Type IDENT ';'
   10        | KW_STATIC Type IDENT ';'

   11 MethodDecls: %empty
   12            | MethodDecls MethodDecl

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls Statements KW_RETURN Expression ';' '}'

   14 MethodSignature: IDENT '(' MethodParams ')'

   15 MethodParams: %empty
   16             | ListParam

   17 ListParam: SingleParam
   18          | SingleParam ',' ListParam

   19 SingleParam: Type IDENT

   20 Type: Type '[' ']'
   21     | KW_BOOLEAN
   22     | KW_STRING
   23     | KW_FLOAT
   24     | KW_INT
   25     | IDENT

   26 Statements: Statementp
   27           | %empty

   28 Statementp: Statementp Statement
   29           | Statement

   30 Statement: '{' Statements '}'
   31          | KW_IF '(' Expression ')' Statement
   32          | KW_IF '(' Expression ')' Statement KW_ELSE Statement
   33          | KW_WHILE '(' Expression ')' Statement
   34          | KW_PRINTLN '(' Expression ')' ';'
   35          | ArrayAccess OP_ASSIGN Expression ';'
   36          | IDENT OP_ASSIGN Expression ';'
   37          | KW_BREAK ';'
   38          | KW_CONTINUE ';'
   39          | KW_SWITCH '(' Expression ')' '{' Cases KW_DEFAULT ':' Statementp '}'

   40 Cases: Cases Case
   41      | %empty

   42 Case: KW_CASE INT_LITERAL ':' Statementp

   43 Expression: Expression OP_OR Expression
   44           | Expression OP_AND Expression
   45           | Expression CMP_EQ Expression
   46           | Expression CMP_NEQ Expression
   47           | Expression CMP_GT Expression
   48           | Expression CMP_GTE Expression
   49           | Expression CMP_LT Expression
   50           | Expression CMP_LTE Expression
   51           | Expression OP_ADD Expression
   52           | Expression OP_MINUS Expression
   53           | Expression OP_MULT Expression
   54           | Expression OP_DIV Expression
   55           | Expression OP_MOD Expression
   56           | '-' Expression
   57           | OP_NOT Expression
   58           | ArrayAccess
   59           | LengthAccess
   60           | Expression '.' Funcall
   61           | INT_LITERAL
   62           | FLOAT_LITERAL
   63           | STRING_LITERAL
   64           | KW_NULL
   65           | KW_TRUE
   66           | KW_FALSE
   67           | IDENT
   68           | KW_THIS
   69           | KW_NEW Type '[' Expression ']'
   70           | KW_NEW IDENT '(' ')'
   71           | '(' Expression ')'

   72 LengthAccess: Expression '.' "length"

   73 ArrayAccess: IDENT '[' Expression ']'

   74 Funcall: IDENT '(' ParamList ')'

   75 ParamList: %empty
   76          | ParamList ',' Expression
   77          | Expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 31 32 33 34 39 70 71 74
')' (41) 14 31 32 33 34 39 70 71 74
',' (44) 18 76
'-' (45) 56
'.' (46) 60 72
':' (58) 39 42
';' (59) 9 10 13 34 35 36 37 38
'[' (91) 20 69 73
']' (93) 20 69 73
'{' (123) 4 13 30 39
'}' (125) 4 13 30 39
error (256)
KW_CLASS (258) 4
KW_EXTENDS (259) 6
KW_PUBLIC (260) 13
KW_STATIC (261) 10
KW_BOOLEAN (262) 21
KW_STRING (263) 22
KW_FLOAT (264) 23
KW_INT (265) 24
KW_IF (266) 31 32
KW_WHILE (267) 33
KW_BREAK (268) 37
KW_CONTINUE (269) 38
KW_SWITCH (270) 39
KW_CASE (271) 42
KW_DEFAULT (272) 39
KW_RETURN (273) 13
KW_NEW (274) 69 70
KW_THIS (275) 68
KW_NULL (276) 64
KW_TRUE (277) 65
KW_FALSE (278) 66
KW_PRINTLN (279) 34
IDENT (280) 4 6 9 10 14 19 25 36 67 70 73 74
INT_LITERAL (281) 42 61
FLOAT_LITERAL (282) 62
STRING_LITERAL (283) 63
TYPE_ERROR (284)
"THEN" (285)
KW_ELSE (286) 32
OP_ASSIGN (287) 35 36
OP_OR (288) 43
OP_AND (289) 44
CMP_EQ (290) 45
CMP_NEQ (291) 46
CMP_GT (292) 47
CMP_LT (293) 49
CMP_GTE (294) 48
CMP_LTE (295) 50
OP_ADD (296) 51
OP_MINUS (297) 52
OP_MULT (298) 53
OP_DIV (299) 54
OP_MOD (300) 55
OP_NOT (301) 57
OP_UNARY (302)
"length" (303) 72


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
Program (61)
    on left: 1, on right: 0
ClassDeclp (62)
    on left: 2 3, on right: 1 3
ClassDecl (63)
    on left: 4, on right: 2 3
ExtendsFrom (64)
    on left: 5 6, on right: 4
VarDecls (65)
    on left: 7 8, on right: 4 7 13
VarDecl (66)
    on left: 9 10, on right: 7
MethodDecls (67)
    on left: 11 12, on right: 4 12
MethodDecl (68)
    on left: 13, on right: 12
MethodSignature (69)
    on left: 14, on right: 13
MethodParams (70)
    on left: 15 16, on right: 14
ListParam (71)
    on left: 17 18, on right: 16 18
SingleParam (72)
    on left: 19, on right: 17 18
Type (73)
    on left: 20 21 22 23 24 25, on right: 9 10 13 19 20 69
Statements (74)
    on left: 26 27, on right: 13 30
Statementp (75)
    on left: 28 29, on right: 26 28 39 42
Statement (76)
    on left: 30 31 32 33 34 35 36 37 38 39, on right: 28 29 31 32 33
Cases (77)
    on left: 40 41, on right: 39 40
Case (78)
    on left: 42, on right: 40
Expression (79)
    on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
    61 62 63 64 65 66 67 68 69 70 71, on right: 13 31 32 33 34 35 36
    39 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 60 69 71 72 73
    76 77
LengthAccess (80)
    on left: 72, on right: 59
ArrayAccess (81)
    on left: 73, on right: 35 58
Funcall (82)
    on left: 74, on right: 60
ParamList (83)
    on left: 75 76 77, on right: 74 76


State 0

    0 $accept: . Program $end

    KW_CLASS  shift, and go to state 1

    Program     go to state 2
    ClassDeclp  go to state 3
    ClassDecl   go to state 4


State 1

    4 ClassDecl: KW_CLASS . IDENT ExtendsFrom '{' VarDecls MethodDecls '}'

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: ClassDeclp .
    3 ClassDeclp: ClassDeclp . ClassDecl

    KW_CLASS  shift, and go to state 1

    $default  reduce using rule 1 (Program)

    ClassDecl  go to state 7


State 4

    2 ClassDeclp: ClassDecl .

    $default  reduce using rule 2 (ClassDeclp)


State 5

    4 ClassDecl: KW_CLASS IDENT . ExtendsFrom '{' VarDecls MethodDecls '}'

    KW_EXTENDS  shift, and go to state 8

    $default  reduce using rule 5 (ExtendsFrom)

    ExtendsFrom  go to state 9


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    3 ClassDeclp: ClassDeclp ClassDecl .

    $default  reduce using rule 3 (ClassDeclp)


State 8

    6 ExtendsFrom: KW_EXTENDS . IDENT

    IDENT  shift, and go to state 10


State 9

    4 ClassDecl: KW_CLASS IDENT ExtendsFrom . '{' VarDecls MethodDecls '}'

    '{'  shift, and go to state 11


State 10

    6 ExtendsFrom: KW_EXTENDS IDENT .

    $default  reduce using rule 6 (ExtendsFrom)


State 11

    4 ClassDecl: KW_CLASS IDENT ExtendsFrom '{' . VarDecls MethodDecls '}'

    $default  reduce using rule 8 (VarDecls)

    VarDecls  go to state 12


State 12

    4 ClassDecl: KW_CLASS IDENT ExtendsFrom '{' VarDecls . MethodDecls '}'
    7 VarDecls: VarDecls . VarDecl

    KW_STATIC   shift, and go to state 13
    KW_BOOLEAN  shift, and go to state 14
    KW_STRING   shift, and go to state 15
    KW_FLOAT    shift, and go to state 16
    KW_INT      shift, and go to state 17
    IDENT       shift, and go to state 18

    $default  reduce using rule 11 (MethodDecls)

    VarDecl      go to state 19
    MethodDecls  go to state 20
    Type         go to state 21


State 13

   10 VarDecl: KW_STATIC . Type IDENT ';'

    KW_BOOLEAN  shift, and go to state 14
    KW_STRING   shift, and go to state 15
    KW_FLOAT    shift, and go to state 16
    KW_INT      shift, and go to state 17
    IDENT       shift, and go to state 18

    Type  go to state 22


State 14

   21 Type: KW_BOOLEAN .

    $default  reduce using rule 21 (Type)


State 15

   22 Type: KW_STRING .

    $default  reduce using rule 22 (Type)


State 16

   23 Type: KW_FLOAT .

    $default  reduce using rule 23 (Type)


State 17

   24 Type: KW_INT .

    $default  reduce using rule 24 (Type)


State 18

   25 Type: IDENT .

    $default  reduce using rule 25 (Type)


State 19

    7 VarDecls: VarDecls VarDecl .

    $default  reduce using rule 7 (VarDecls)


State 20

    4 ClassDecl: KW_CLASS IDENT ExtendsFrom '{' VarDecls MethodDecls . '}'
   12 MethodDecls: MethodDecls . MethodDecl

    KW_PUBLIC  shift, and go to state 23
    '}'        shift, and go to state 24

    MethodDecl  go to state 25


State 21

    9 VarDecl: Type . IDENT ';'
   20 Type: Type . '[' ']'

    IDENT  shift, and go to state 26
    '['    shift, and go to state 27


State 22

   10 VarDecl: KW_STATIC Type . IDENT ';'
   20 Type: Type . '[' ']'

    IDENT  shift, and go to state 28
    '['    shift, and go to state 27


State 23

   13 MethodDecl: KW_PUBLIC . Type MethodSignature '{' VarDecls Statements KW_RETURN Expression ';' '}'

    KW_BOOLEAN  shift, and go to state 14
    KW_STRING   shift, and go to state 15
    KW_FLOAT    shift, and go to state 16
    KW_INT      shift, and go to state 17
    IDENT       shift, and go to state 18

    Type  go to state 29


State 24

    4 ClassDecl: KW_CLASS IDENT ExtendsFrom '{' VarDecls MethodDecls '}' .

    $default  reduce using rule 4 (ClassDecl)


State 25

   12 MethodDecls: MethodDecls MethodDecl .

    $default  reduce using rule 12 (MethodDecls)


State 26

    9 VarDecl: Type IDENT . ';'

    ';'  shift, and go to state 30


State 27

   20 Type: Type '[' . ']'

    ']'  shift, and go to state 31


State 28

   10 VarDecl: KW_STATIC Type IDENT . ';'

    ';'  shift, and go to state 32


State 29

   13 MethodDecl: KW_PUBLIC Type . MethodSignature '{' VarDecls Statements KW_RETURN Expression ';' '}'
   20 Type: Type . '[' ']'

    IDENT  shift, and go to state 33
    '['    shift, and go to state 27

    MethodSignature  go to state 34


State 30

    9 VarDecl: Type IDENT ';' .

    $default  reduce using rule 9 (VarDecl)


State 31

   20 Type: Type '[' ']' .

    $default  reduce using rule 20 (Type)


State 32

   10 VarDecl: KW_STATIC Type IDENT ';' .

    $default  reduce using rule 10 (VarDecl)


State 33

   14 MethodSignature: IDENT . '(' MethodParams ')'

    '('  shift, and go to state 35


State 34

   13 MethodDecl: KW_PUBLIC Type MethodSignature . '{' VarDecls Statements KW_RETURN Expression ';' '}'

    '{'  shift, and go to state 36


State 35

   14 MethodSignature: IDENT '(' . MethodParams ')'

    KW_BOOLEAN  shift, and go to state 14
    KW_STRING   shift, and go to state 15
    KW_FLOAT    shift, and go to state 16
    KW_INT      shift, and go to state 17
    IDENT       shift, and go to state 18

    $default  reduce using rule 15 (MethodParams)

    MethodParams  go to state 37
    ListParam     go to state 38
    SingleParam   go to state 39
    Type          go to state 40


State 36

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' . VarDecls Statements KW_RETURN Expression ';' '}'

    $default  reduce using rule 8 (VarDecls)

    VarDecls  go to state 41


State 37

   14 MethodSignature: IDENT '(' MethodParams . ')'

    ')'  shift, and go to state 42


State 38

   16 MethodParams: ListParam .

    $default  reduce using rule 16 (MethodParams)


State 39

   17 ListParam: SingleParam .
   18          | SingleParam . ',' ListParam

    ','  shift, and go to state 43

    $default  reduce using rule 17 (ListParam)


State 40

   19 SingleParam: Type . IDENT
   20 Type: Type . '[' ']'

    IDENT  shift, and go to state 44
    '['    shift, and go to state 27


State 41

    7 VarDecls: VarDecls . VarDecl
   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls . Statements KW_RETURN Expression ';' '}'

    KW_STATIC    shift, and go to state 13
    KW_BOOLEAN   shift, and go to state 14
    KW_STRING    shift, and go to state 15
    KW_FLOAT     shift, and go to state 16
    KW_INT       shift, and go to state 17
    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 51
    '{'          shift, and go to state 52

    $default  reduce using rule 27 (Statements)

    VarDecl      go to state 19
    Type         go to state 21
    Statements   go to state 53
    Statementp   go to state 54
    Statement    go to state 55
    ArrayAccess  go to state 56


State 42

   14 MethodSignature: IDENT '(' MethodParams ')' .

    $default  reduce using rule 14 (MethodSignature)


State 43

   18 ListParam: SingleParam ',' . ListParam

    KW_BOOLEAN  shift, and go to state 14
    KW_STRING   shift, and go to state 15
    KW_FLOAT    shift, and go to state 16
    KW_INT      shift, and go to state 17
    IDENT       shift, and go to state 18

    ListParam    go to state 57
    SingleParam  go to state 39
    Type         go to state 40


State 44

   19 SingleParam: Type IDENT .

    $default  reduce using rule 19 (SingleParam)


State 45

   31 Statement: KW_IF . '(' Expression ')' Statement
   32          | KW_IF . '(' Expression ')' Statement KW_ELSE Statement

    '('  shift, and go to state 58


State 46

   33 Statement: KW_WHILE . '(' Expression ')' Statement

    '('  shift, and go to state 59


State 47

   37 Statement: KW_BREAK . ';'

    ';'  shift, and go to state 60


State 48

   38 Statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 61


State 49

   39 Statement: KW_SWITCH . '(' Expression ')' '{' Cases KW_DEFAULT ':' Statementp '}'

    '('  shift, and go to state 62


State 50

   34 Statement: KW_PRINTLN . '(' Expression ')' ';'

    '('  shift, and go to state 63


State 51

   25 Type: IDENT .
   36 Statement: IDENT . OP_ASSIGN Expression ';'
   73 ArrayAccess: IDENT . '[' Expression ']'

    OP_ASSIGN  shift, and go to state 64
    '['        shift, and go to state 65

    '['       [reduce using rule 25 (Type)]
    $default  reduce using rule 25 (Type)


State 52

   30 Statement: '{' . Statements '}'

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    $default  reduce using rule 27 (Statements)

    Statements   go to state 67
    Statementp   go to state 54
    Statement    go to state 55
    ArrayAccess  go to state 56


State 53

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls Statements . KW_RETURN Expression ';' '}'

    KW_RETURN  shift, and go to state 68


State 54

   26 Statements: Statementp .
   28 Statementp: Statementp . Statement

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    $default  reduce using rule 26 (Statements)

    Statement    go to state 69
    ArrayAccess  go to state 56


State 55

   29 Statementp: Statement .

    $default  reduce using rule 29 (Statementp)


State 56

   35 Statement: ArrayAccess . OP_ASSIGN Expression ';'

    OP_ASSIGN  shift, and go to state 70


State 57

   18 ListParam: SingleParam ',' ListParam .

    $default  reduce using rule 18 (ListParam)


State 58

   31 Statement: KW_IF '(' . Expression ')' Statement
   32          | KW_IF '(' . Expression ')' Statement KW_ELSE Statement

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 83
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 59

   33 Statement: KW_WHILE '(' . Expression ')' Statement

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 86
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 60

   37 Statement: KW_BREAK ';' .

    $default  reduce using rule 37 (Statement)


State 61

   38 Statement: KW_CONTINUE ';' .

    $default  reduce using rule 38 (Statement)


State 62

   39 Statement: KW_SWITCH '(' . Expression ')' '{' Cases KW_DEFAULT ':' Statementp '}'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 87
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 63

   34 Statement: KW_PRINTLN '(' . Expression ')' ';'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 88
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 64

   36 Statement: IDENT OP_ASSIGN . Expression ';'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 89
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 65

   73 ArrayAccess: IDENT '[' . Expression ']'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 90
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 66

   36 Statement: IDENT . OP_ASSIGN Expression ';'
   73 ArrayAccess: IDENT . '[' Expression ']'

    OP_ASSIGN  shift, and go to state 64
    '['        shift, and go to state 65


State 67

   30 Statement: '{' Statements . '}'

    '}'  shift, and go to state 91


State 68

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls Statements KW_RETURN . Expression ';' '}'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 92
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 69

   28 Statementp: Statementp Statement .

    $default  reduce using rule 28 (Statementp)


State 70

   35 Statement: ArrayAccess OP_ASSIGN . Expression ';'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 93
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 71

   69 Expression: KW_NEW . Type '[' Expression ']'
   70           | KW_NEW . IDENT '(' ')'

    KW_BOOLEAN  shift, and go to state 14
    KW_STRING   shift, and go to state 15
    KW_FLOAT    shift, and go to state 16
    KW_INT      shift, and go to state 17
    IDENT       shift, and go to state 94

    Type  go to state 95


State 72

   68 Expression: KW_THIS .

    $default  reduce using rule 68 (Expression)


State 73

   64 Expression: KW_NULL .

    $default  reduce using rule 64 (Expression)


State 74

   65 Expression: KW_TRUE .

    $default  reduce using rule 65 (Expression)


State 75

   66 Expression: KW_FALSE .

    $default  reduce using rule 66 (Expression)


State 76

   67 Expression: IDENT .
   73 ArrayAccess: IDENT . '[' Expression ']'

    '['  shift, and go to state 65

    $default  reduce using rule 67 (Expression)


State 77

   61 Expression: INT_LITERAL .

    $default  reduce using rule 61 (Expression)


State 78

   62 Expression: FLOAT_LITERAL .

    $default  reduce using rule 62 (Expression)


State 79

   63 Expression: STRING_LITERAL .

    $default  reduce using rule 63 (Expression)


State 80

   57 Expression: OP_NOT . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 96
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 81

   71 Expression: '(' . Expression ')'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 97
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 82

   56 Expression: '-' . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 98
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 83

   31 Statement: KW_IF '(' Expression . ')' Statement
   32          | KW_IF '(' Expression . ')' Statement KW_ELSE Statement
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ')'       shift, and go to state 113


State 84

   59 Expression: LengthAccess .

    $default  reduce using rule 59 (Expression)


State 85

   58 Expression: ArrayAccess .

    $default  reduce using rule 58 (Expression)


State 86

   33 Statement: KW_WHILE '(' Expression . ')' Statement
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ')'       shift, and go to state 114


State 87

   39 Statement: KW_SWITCH '(' Expression . ')' '{' Cases KW_DEFAULT ':' Statementp '}'
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ')'       shift, and go to state 115


State 88

   34 Statement: KW_PRINTLN '(' Expression . ')' ';'
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ')'       shift, and go to state 116


State 89

   36 Statement: IDENT OP_ASSIGN Expression . ';'
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ';'       shift, and go to state 117


State 90

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"
   73 ArrayAccess: IDENT '[' Expression . ']'

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ']'       shift, and go to state 118


State 91

   30 Statement: '{' Statements '}' .

    $default  reduce using rule 30 (Statement)


State 92

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls Statements KW_RETURN Expression . ';' '}'
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ';'       shift, and go to state 119


State 93

   35 Statement: ArrayAccess OP_ASSIGN Expression . ';'
   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ';'       shift, and go to state 120


State 94

   25 Type: IDENT .
   70 Expression: KW_NEW IDENT . '(' ')'

    '('  shift, and go to state 121

    $default  reduce using rule 25 (Type)


State 95

   20 Type: Type . '[' ']'
   69 Expression: KW_NEW Type . '[' Expression ']'

    '['  shift, and go to state 122


State 96

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   57           | OP_NOT Expression .
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    '.'  shift, and go to state 112

    $default  reduce using rule 57 (Expression)


State 97

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   71           | '(' Expression . ')'
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ')'       shift, and go to state 123


State 98

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   56           | '-' Expression .
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    '.'  shift, and go to state 112

    $default  reduce using rule 56 (Expression)


State 99

   43 Expression: Expression OP_OR . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 124
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 100

   44 Expression: Expression OP_AND . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 125
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 101

   45 Expression: Expression CMP_EQ . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 126
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 102

   46 Expression: Expression CMP_NEQ . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 127
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 103

   47 Expression: Expression CMP_GT . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 128
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 104

   49 Expression: Expression CMP_LT . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 129
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 105

   48 Expression: Expression CMP_GTE . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 130
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 106

   50 Expression: Expression CMP_LTE . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 131
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 107

   51 Expression: Expression OP_ADD . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 132
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 108

   52 Expression: Expression OP_MINUS . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 133
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 109

   53 Expression: Expression OP_MULT . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 134
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 110

   54 Expression: Expression OP_DIV . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 135
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 111

   55 Expression: Expression OP_MOD . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 136
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 112

   60 Expression: Expression '.' . Funcall
   72 LengthAccess: Expression '.' . "length"

    IDENT     shift, and go to state 137
    "length"  shift, and go to state 138

    Funcall  go to state 139


State 113

   31 Statement: KW_IF '(' Expression ')' . Statement
   32          | KW_IF '(' Expression ')' . Statement KW_ELSE Statement

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    Statement    go to state 140
    ArrayAccess  go to state 56


State 114

   33 Statement: KW_WHILE '(' Expression ')' . Statement

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    Statement    go to state 141
    ArrayAccess  go to state 56


State 115

   39 Statement: KW_SWITCH '(' Expression ')' . '{' Cases KW_DEFAULT ':' Statementp '}'

    '{'  shift, and go to state 142


State 116

   34 Statement: KW_PRINTLN '(' Expression ')' . ';'

    ';'  shift, and go to state 143


State 117

   36 Statement: IDENT OP_ASSIGN Expression ';' .

    $default  reduce using rule 36 (Statement)


State 118

   73 ArrayAccess: IDENT '[' Expression ']' .

    $default  reduce using rule 73 (ArrayAccess)


State 119

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls Statements KW_RETURN Expression ';' . '}'

    '}'  shift, and go to state 144


State 120

   35 Statement: ArrayAccess OP_ASSIGN Expression ';' .

    $default  reduce using rule 35 (Statement)


State 121

   70 Expression: KW_NEW IDENT '(' . ')'

    ')'  shift, and go to state 145


State 122

   20 Type: Type '[' . ']'
   69 Expression: KW_NEW Type '[' . Expression ']'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    ']'             shift, and go to state 31
    '-'             shift, and go to state 82

    Expression    go to state 146
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 123

   71 Expression: '(' Expression ')' .

    $default  reduce using rule 71 (Expression)


State 124

   43 Expression: Expression . OP_OR Expression
   43           | Expression OP_OR Expression .
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    $default  reduce using rule 43 (Expression)


State 125

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   44           | Expression OP_AND Expression .
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    $default  reduce using rule 44 (Expression)


State 126

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   45           | Expression CMP_EQ Expression .
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    CMP_EQ   error (nonassociative)
    CMP_NEQ  error (nonassociative)

    $default  reduce using rule 45 (Expression)


State 127

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   46           | Expression CMP_NEQ Expression .
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    CMP_EQ   error (nonassociative)
    CMP_NEQ  error (nonassociative)

    $default  reduce using rule 46 (Expression)


State 128

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   47           | Expression CMP_GT Expression .
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    CMP_GT   error (nonassociative)
    CMP_LT   error (nonassociative)
    CMP_GTE  error (nonassociative)
    CMP_LTE  error (nonassociative)

    $default  reduce using rule 47 (Expression)


State 129

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   49           | Expression CMP_LT Expression .
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    CMP_GT   error (nonassociative)
    CMP_LT   error (nonassociative)
    CMP_GTE  error (nonassociative)
    CMP_LTE  error (nonassociative)

    $default  reduce using rule 49 (Expression)


State 130

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   48           | Expression CMP_GTE Expression .
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    CMP_GT   error (nonassociative)
    CMP_LT   error (nonassociative)
    CMP_GTE  error (nonassociative)
    CMP_LTE  error (nonassociative)

    $default  reduce using rule 48 (Expression)


State 131

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   50           | Expression CMP_LTE Expression .
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    CMP_GT   error (nonassociative)
    CMP_LT   error (nonassociative)
    CMP_GTE  error (nonassociative)
    CMP_LTE  error (nonassociative)

    $default  reduce using rule 50 (Expression)


State 132

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   51           | Expression OP_ADD Expression .
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_MULT  shift, and go to state 109
    OP_DIV   shift, and go to state 110
    OP_MOD   shift, and go to state 111
    '.'      shift, and go to state 112

    $default  reduce using rule 51 (Expression)


State 133

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   52           | Expression OP_MINUS Expression .
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    OP_MULT  shift, and go to state 109
    OP_DIV   shift, and go to state 110
    OP_MOD   shift, and go to state 111
    '.'      shift, and go to state 112

    $default  reduce using rule 52 (Expression)


State 134

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   53           | Expression OP_MULT Expression .
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    '.'  shift, and go to state 112

    $default  reduce using rule 53 (Expression)


State 135

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   54           | Expression OP_DIV Expression .
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    '.'  shift, and go to state 112

    $default  reduce using rule 54 (Expression)


State 136

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   55           | Expression OP_MOD Expression .
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"

    '.'  shift, and go to state 112

    $default  reduce using rule 55 (Expression)


State 137

   74 Funcall: IDENT . '(' ParamList ')'

    '('  shift, and go to state 147


State 138

   72 LengthAccess: Expression '.' "length" .

    $default  reduce using rule 72 (LengthAccess)


State 139

   60 Expression: Expression '.' Funcall .

    $default  reduce using rule 60 (Expression)


State 140

   31 Statement: KW_IF '(' Expression ')' Statement .
   32          | KW_IF '(' Expression ')' Statement . KW_ELSE Statement

    KW_ELSE  shift, and go to state 148

    $default  reduce using rule 31 (Statement)


State 141

   33 Statement: KW_WHILE '(' Expression ')' Statement .

    $default  reduce using rule 33 (Statement)


State 142

   39 Statement: KW_SWITCH '(' Expression ')' '{' . Cases KW_DEFAULT ':' Statementp '}'

    $default  reduce using rule 41 (Cases)

    Cases  go to state 149


State 143

   34 Statement: KW_PRINTLN '(' Expression ')' ';' .

    $default  reduce using rule 34 (Statement)


State 144

   13 MethodDecl: KW_PUBLIC Type MethodSignature '{' VarDecls Statements KW_RETURN Expression ';' '}' .

    $default  reduce using rule 13 (MethodDecl)


State 145

   70 Expression: KW_NEW IDENT '(' ')' .

    $default  reduce using rule 70 (Expression)


State 146

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   69           | KW_NEW Type '[' Expression . ']'
   72 LengthAccess: Expression . '.' "length"

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112
    ']'       shift, and go to state 150


State 147

   74 Funcall: IDENT '(' . ParamList ')'

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    $default  reduce using rule 75 (ParamList)

    Expression    go to state 151
    LengthAccess  go to state 84
    ArrayAccess   go to state 85
    ParamList     go to state 152


State 148

   32 Statement: KW_IF '(' Expression ')' Statement KW_ELSE . Statement

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    Statement    go to state 153
    ArrayAccess  go to state 56


State 149

   39 Statement: KW_SWITCH '(' Expression ')' '{' Cases . KW_DEFAULT ':' Statementp '}'
   40 Cases: Cases . Case

    KW_CASE     shift, and go to state 154
    KW_DEFAULT  shift, and go to state 155

    Case  go to state 156


State 150

   69 Expression: KW_NEW Type '[' Expression ']' .

    $default  reduce using rule 69 (Expression)


State 151

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"
   77 ParamList: Expression .

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    $default  reduce using rule 77 (ParamList)


State 152

   74 Funcall: IDENT '(' ParamList . ')'
   76 ParamList: ParamList . ',' Expression

    ')'  shift, and go to state 157
    ','  shift, and go to state 158


State 153

   32 Statement: KW_IF '(' Expression ')' Statement KW_ELSE Statement .

    $default  reduce using rule 32 (Statement)


State 154

   42 Case: KW_CASE . INT_LITERAL ':' Statementp

    INT_LITERAL  shift, and go to state 159


State 155

   39 Statement: KW_SWITCH '(' Expression ')' '{' Cases KW_DEFAULT . ':' Statementp '}'

    ':'  shift, and go to state 160


State 156

   40 Cases: Cases Case .

    $default  reduce using rule 40 (Cases)


State 157

   74 Funcall: IDENT '(' ParamList ')' .

    $default  reduce using rule 74 (Funcall)


State 158

   76 ParamList: ParamList ',' . Expression

    KW_NEW          shift, and go to state 71
    KW_THIS         shift, and go to state 72
    KW_NULL         shift, and go to state 73
    KW_TRUE         shift, and go to state 74
    KW_FALSE        shift, and go to state 75
    IDENT           shift, and go to state 76
    INT_LITERAL     shift, and go to state 77
    FLOAT_LITERAL   shift, and go to state 78
    STRING_LITERAL  shift, and go to state 79
    OP_NOT          shift, and go to state 80
    '('             shift, and go to state 81
    '-'             shift, and go to state 82

    Expression    go to state 161
    LengthAccess  go to state 84
    ArrayAccess   go to state 85


State 159

   42 Case: KW_CASE INT_LITERAL . ':' Statementp

    ':'  shift, and go to state 162


State 160

   39 Statement: KW_SWITCH '(' Expression ')' '{' Cases KW_DEFAULT ':' . Statementp '}'

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    Statementp   go to state 163
    Statement    go to state 55
    ArrayAccess  go to state 56


State 161

   43 Expression: Expression . OP_OR Expression
   44           | Expression . OP_AND Expression
   45           | Expression . CMP_EQ Expression
   46           | Expression . CMP_NEQ Expression
   47           | Expression . CMP_GT Expression
   48           | Expression . CMP_GTE Expression
   49           | Expression . CMP_LT Expression
   50           | Expression . CMP_LTE Expression
   51           | Expression . OP_ADD Expression
   52           | Expression . OP_MINUS Expression
   53           | Expression . OP_MULT Expression
   54           | Expression . OP_DIV Expression
   55           | Expression . OP_MOD Expression
   60           | Expression . '.' Funcall
   72 LengthAccess: Expression . '.' "length"
   76 ParamList: ParamList ',' Expression .

    OP_OR     shift, and go to state 99
    OP_AND    shift, and go to state 100
    CMP_EQ    shift, and go to state 101
    CMP_NEQ   shift, and go to state 102
    CMP_GT    shift, and go to state 103
    CMP_LT    shift, and go to state 104
    CMP_GTE   shift, and go to state 105
    CMP_LTE   shift, and go to state 106
    OP_ADD    shift, and go to state 107
    OP_MINUS  shift, and go to state 108
    OP_MULT   shift, and go to state 109
    OP_DIV    shift, and go to state 110
    OP_MOD    shift, and go to state 111
    '.'       shift, and go to state 112

    $default  reduce using rule 76 (ParamList)


State 162

   42 Case: KW_CASE INT_LITERAL ':' . Statementp

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    Statementp   go to state 164
    Statement    go to state 55
    ArrayAccess  go to state 56


State 163

   28 Statementp: Statementp . Statement
   39 Statement: KW_SWITCH '(' Expression ')' '{' Cases KW_DEFAULT ':' Statementp . '}'

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52
    '}'          shift, and go to state 165

    Statement    go to state 69
    ArrayAccess  go to state 56


State 164

   28 Statementp: Statementp . Statement
   42 Case: KW_CASE INT_LITERAL ':' Statementp .

    KW_IF        shift, and go to state 45
    KW_WHILE     shift, and go to state 46
    KW_BREAK     shift, and go to state 47
    KW_CONTINUE  shift, and go to state 48
    KW_SWITCH    shift, and go to state 49
    KW_PRINTLN   shift, and go to state 50
    IDENT        shift, and go to state 66
    '{'          shift, and go to state 52

    $default  reduce using rule 42 (Case)

    Statement    go to state 69
    ArrayAccess  go to state 56


State 165

   39 Statement: KW_SWITCH '(' Expression ')' '{' Cases KW_DEFAULT ':' Statementp '}' .

    $default  reduce using rule 39 (Statement)
